# Generated by Django 4.2.5 on 2023-09-06 09:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('username', models.CharField(max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Accounts',
            fields=[
                ('account_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('status', models.CharField(choices=[('A', 'Active'), ('P', 'Pending'), ('C', 'Closed')], max_length=1)),
                ('date_created', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='AccountTypes',
            fields=[
                ('type_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Departments',
            fields=[
                ('department_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('birth_date', models.DateField()),
                ('identity_no', models.CharField(max_length=9)),
                ('address', models.CharField(max_length=255)),
                ('nationality', models.CharField(max_length=20)),
                ('gender', models.CharField(choices=[('F', 'Female'), ('M', 'Male')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=255)),
                ('birth_date', models.DateField()),
                ('gender', models.CharField(choices=[('F', 'Female'), ('M', 'Male')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Transactions',
            fields=[
                ('transaction_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('date', models.DateTimeField()),
                ('recipient_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_transactions', to='user_api.accounts')),
                ('sender_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_transactions', to='user_api.accounts')),
            ],
        ),
        migrations.CreateModel(
            name='TicketTypes',
            fields=[
                ('ticket_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('department_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='user_api.departments')),
            ],
        ),
        migrations.CreateModel(
            name='Tickets',
            fields=[
                ('ticket_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('C', 'Closed'), ('O', 'Open'), ('A', 'Approved')], max_length=1)),
                ('created_date', models.DateTimeField()),
                ('closed_date', models.DateTimeField(null=True)),
                ('closed_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='closed_tickets', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_tickets', to=settings.AUTH_USER_MODEL)),
                ('ticket_type_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='user_api.tickettypes')),
            ],
        ),
        migrations.CreateModel(
            name='TicketMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.IntegerField()),
                ('message', models.CharField()),
                ('date', models.DateTimeField()),
                ('ticket_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_api.tickets')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LogCalls',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('time', models.DateTimeField()),
                ('action', models.CharField(max_length=255)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LogAccount',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('time', models.DateTimeField()),
                ('ip', models.GenericIPAddressField()),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DeptManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(null=True)),
                ('department_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_api.departments')),
            ],
        ),
        migrations.AddField(
            model_name='accounts',
            name='type_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_api.accounttypes'),
        ),
        migrations.AddConstraint(
            model_name='tickets',
            constraint=models.CheckConstraint(check=models.Q(('closed_date__isnull', True), ('closed_date__gt', models.F('created_date')), _connector='OR'), name='closed_date_check'),
        ),
        migrations.AddConstraint(
            model_name='ticketmessage',
            constraint=models.UniqueConstraint(fields=('ticket_id', 'message_id'), name='ticket_msg_unique'),
        ),
        migrations.AddField(
            model_name='deptmanager',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_api.staff'),
        ),
        migrations.AddField(
            model_name='accounts',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_api.customers'),
        ),
        migrations.AddConstraint(
            model_name='deptmanager',
            constraint=models.UniqueConstraint(fields=('department_id', 'user_id'), name='dept_manager_unique'),
        ),
        migrations.AddConstraint(
            model_name='deptmanager',
            constraint=models.CheckConstraint(check=models.Q(('end_date__isnull', True), ('end_date__gt', models.F('start_date')), _connector='OR'), name='end_date_check'),
        ),
    ]
